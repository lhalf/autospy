---
source: autospy_macro/src/generate.rs
assertion_line: 329
expression: "generate_pretty(parse_quote!\n{\n    trait TestTrait\n    {\n        #[autospy(String)] type Argument; #[autospy(String)] type Return; fn\n        function(&self, argument: Self::Argument) -> Self::Return;\n    }\n})"
---
trait TestTrait {
    type Argument;
    type Return;
    fn function(&self, argument: Self::Argument) -> Self::Return;
}
#[cfg(test)]
#[derive(Clone)]
struct TestTraitSpy {
    pub function: autospy::SpyFunction<String, String>,
}
#[cfg(test)]
impl Default for TestTraitSpy {
    fn default() -> Self {
        Self {
            function: autospy::SpyFunction::from("function"),
        }
    }
}
#[cfg(test)]
impl TestTrait for TestTraitSpy {
    type Argument = String;
    type Return = String;
    #[track_caller]
    fn function(&self, argument: Self::Argument) -> Self::Return {
        self.function.spy(argument)
    }
}
