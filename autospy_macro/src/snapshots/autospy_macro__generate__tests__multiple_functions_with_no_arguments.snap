---
source: autospy_macro/src/generate.rs
expression: "generate_pretty(parse_quote!\n{ trait TestTrait { fn function1(&self); fn function2(&self); } })"
---
trait TestTrait {
    fn function1(&self);
    fn function2(&self);
}
#[cfg(test)]
#[derive(Clone)]
struct TestTraitSpy {
    pub function1: autospy::SpyFunction<(), ()>,
    pub function2: autospy::SpyFunction<(), ()>,
}
#[cfg(test)]
impl Default for TestTraitSpy {
    fn default() -> Self {
        Self {
            function1: autospy::SpyFunction::from("function1"),
            function2: autospy::SpyFunction::from("function2"),
        }
    }
}
#[cfg(test)]
impl TestTrait for TestTraitSpy {
    #[track_caller]
    fn function1(&self) {
        self.function1.spy(())
    }
    #[track_caller]
    fn function2(&self) {
        self.function2.spy(())
    }
}
