---
source: autospy_macro/src/generate.rs
expression: "generate_pretty(quote!\n{ trait TestTrait { fn function(&self, argument1: &str, argument2: &str); } })"
---
trait TestTrait {
    fn function(&self, argument1: &str, argument2: &str);
}
#[derive(Default, Clone)]
struct TestTraitSpy {
    pub function: autospy::SpyFunction<
        (<str as ToOwned>::Owned, <str as ToOwned>::Owned),
        (),
    >,
}
impl TestTrait for TestTraitSpy {
    fn function(&self, argument1: &str, argument2: &str) {
        self.function.spy((argument1.to_owned(), argument2.to_owned()))
    }
}
