---
source: autospy_macro/src/generate.rs
assertion_line: 175
expression: "generate_pretty(quote!\n{\n    trait TestTrait\n    { fn function(&self, argument1: String, argument2: String); }\n})"
---
trait TestTrait {
    fn function(&self, argument1: String, argument2: String);
}
#[cfg(any(test, not(feature = "test")))]
#[derive(Default, Clone)]
struct TestTraitSpy {
    pub function: autospy::SpyFunction<
        (<String as ToOwned>::Owned, <String as ToOwned>::Owned),
        (),
    >,
}
#[cfg(any(test, not(feature = "test")))]
impl TestTrait for TestTraitSpy {
    fn function(&self, argument1: String, argument2: String) {
        self.function.spy((argument1.to_owned(), argument2.to_owned()))
    }
}
